

# import sys

# # membership op
# class A: 
#     @classmethod
#     def min_coins(cls, input1, input2):
#         m = len(input1)
#         if (input2 == 0):
#             return 0
#         res = sys.maxsize
            
#         for i in range(0, m):
#             if (input1[i] <= input2):
#                 sub_res = cls.min_coins(input1, input2-input1[i])

#                 if (sub_res != sys.maxsize and sub_res + 1 < res):
#                     res = sub_res + 1

#         return res


# a = A()
# print(a.min_coins([9,6,5,1], 18))


# def m(inp1):
#     l = inp1.split()
#     l1 = []
#     for i in l:
#         l1.append(i.lower())  
#     l3 = []
#     for j in l1:
#         if (l1.count(j) > 1) and (j not in l3):
#             l3.append(j)
#     return sorted(l3)

# print(m("hello my  hello is"))



def reverseSting(text): 
    index = -1
  
    # Loop from last index untill half of the index      
    for i in range(len(text)-1, int(len(text)/2), -1): 
  
        # match character is alphabet or not          
        if text[i].isalpha(): 
            temp = text[i] 
            while True: 
                index += 1
                if text[index].isalpha(): 
                    text[i] = text[index] 
                    text[index] = temp 
                    break
    return text 
      
# Driver code 
string = "abc$dfh%"
# print ("Input string: ", string) 
string = reverseSting(list(string)) 
# print ("Output string: ", "".join(string)) 



strSample="abc$dfh%"
  
#convert string into list
listSample=list(strSample)
  
i=0
j=len(listSample)-1
  
while i<j:
    if not listSample[i].isalpha():
        i+=1
    elif not listSample[j].isalpha():
        j-=1
    else:
        #swap the element in the list 
        #if both elements are alphabets
        listSample[i], listSample[j]=listSample[j], listSample[i]
        i+=1
        j-=1
  
#convert list into string 
#by concatinating each element in the list
strOut=''.join(listSample)
print(strOut)